package com.booking.util;
import com.booking.payload.UserDTO;
import com.itextpdf.text.Document;
import com.itextpdf.text.DocumentException;
import com.itextpdf.text.PageSize;
import com.itextpdf.text.Paragraph;
import com.itextpdf.text.pdf.PdfPTable;
import com.itextpdf.text.pdf.PdfWriter;

import java.io.ByteArrayInputStream;
import java.io.ByteArrayOutputStream;
import java.util.List;

public class PdfExporter {
    public static ByteArrayInputStream exportUsersToPdf(List<UserDTO> users) {
        Document document = new Document(PageSize.A4);

        ByteArrayOutputStream out = new ByteArrayOutputStream();

        try {
            // Create PdfWriter instance
            PdfWriter.getInstance(document, out);

            // Open the document
            document.open();

            // Create a table with 7 columns
            PdfPTable table = new PdfPTable(7);

            // Add table header
            table.addCell("ID");
            table.addCell("First Name");
            table.addCell("Last Name");
            table.addCell("Email");
            table.addCell("Phone Number");
            table.addCell("Created At");
            table.addCell("Updated At");

            // Add table rows
            for (UserDTO user : users) {
                table.addCell(user.getId().toString());
                table.addCell(user.getFirstName());
                table.addCell(user.getLastName());
                table.addCell(user.getEmail());
                table.addCell(user.getPhoneNumber());
                table.addCell(user.getCreatedAt().toString());
                table.addCell(user.getUpdatedAt().toString());
            }

            // Add the table to the document
            document.add(table);

            // Add a new paragraph to the document
            document.add(new Paragraph("Generated by Booking App"));

            // Close the document
            document.close();

        } catch (DocumentException e) {
            throw new RuntimeException("Failed to create PDF file", e);
        }

        return new ByteArrayInputStream(out.toByteArray());
    }
}
